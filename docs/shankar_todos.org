** Developments
   
*** Argumentation workflow

* simplify all metrics to the simplest forms
* add tasks to training options, also to output files

* make appropriate grid-search paramters
* simplify code and architecture to palatable scale before running grid-search again
* reduce learning rates in LR scheduler given small batch size, change batch size and max seq length
* add all necessary documentation to code, remove redundant code

**** Architecture
***** TODO add all relevant metrics into evaluation step so they can be re-used
***** TODO use smaller or narrower search space in grid-search, only use val_loss to simplify code
***** TODO first develop full baseline for task 1, then proceed to task 2
***** develop gradient accumulator in optimizer to save memory and use most of data available      
***** make homogeneous train/validation/test datasets for appropriate evaluation

**** Domain debiasing
***** TODO remove capital names and references to reduce bias
***** perhaps dropout would assist in training

**** Sequence encoding
***** simple (task 1) -> 1: claim, 2: premise, 3: non-argument
***** tree (task 2) -> adjacency matrix connecting to various heads which could be claims or connecting premise
***** need to split UNSC smaller speech segments or paragraphs to pass into pipeline

**** Documentation
***** fix up all readmes for clarity
***** fill up pydocstrings in appropriate style for all functions
***** add all dependencies and information on how to install, test venv on cluster
***** add information on init.sh and how to use
