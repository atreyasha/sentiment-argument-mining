** Developments
 
*** Argumentation workflow

**** Documentation/Visualization
***** TODO add section for final evaluation on UNSC corpus, with new pre_processing script in older section
***** TODO fill up pydocstrings in appropriate style for all functions
***** TODO squeeze in sentiment methodologies into repository when done, install sentiment dependencies onto venv for global tracking, perhaps add sentiment analysis on jupyter notebook with shared dependencies
***** update all information to indicate procedures and articles involved, so users can find relevant information
***** include overview section in ./src to summarize all sentiment and argumentation techniques
***** push final paper and bibtex when all is done, add global references to results from paper
      
**** Sequence encoding
***** simple (task 1) -> 1: claim, 2: premise, 3: non-argument
***** tree (task 2) -> adjacency matrix connecting to various heads which could be claims or connecting premise
***** minor debiasing done with removal of capital references

**** Architecture
***** limited time issue: make homogeneous train/validation/test datasets for appropriate evaluation
***** limited time issue: multi-task setting with argumentation tree
***** limited time issue: develop gradient accumulator/checkpointer in optimizer to save memory and use most of data available

**** Paper
***** motivate with all methods tried
***** mention domain debiasing with removal of references
***** compare with scores in paper and talk about how paper made much simplifications
***** think about all other optimizations worth mentioning, talk about problem with size 128 reduction
***** concede to using low batch size to allow for more data, add comparison with majority class classifier as baseline
***** mention all limitations and recommendations for things to do; along with using pytorch instead of tensorflow
